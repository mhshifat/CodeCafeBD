!function(e){var r={};function n(t){if(r[t])return r[t].exports;var s=r[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)n.d(t,s,function(r){return e[r]}.bind(null,s));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s=13)}([function(e,r){e.exports=require("mongoose")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("jsonwebtoken")},function(e,r){e.exports=require("colors")},function(e){e.exports={b:"server",c:"1.0.0",a:"Personal portfolio website"}},function(e,r){e.exports=require("dotenv")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("bcryptjs")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("morgan")},function(e,r){e.exports=require("helmet")},function(e,r){e.exports=require("cookie-parser")},function(e,r){e.exports=require("nodemailer")},function(e,r,n){"use strict";n.r(r);var t=n(8),s=n.n(t),a=n(1),o=n.n(a),i=n(3),l=n.n(i),c=n(9),d=n.n(c),u=n(10),p=n.n(u),f=n(6),m=n.n(f),g=n(11),b=n.n(g),y=n(4);const h=process.env.PORT||5e3;var x=n(2),v=n.n(x),w=n(7),j=n.n(w);var k=({username:e,email:r,password:n})=>{const t={};return e.includes(n)&&(t.username="Username and password can't be the same"),r.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(t.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(t.username="Please provide a valid username"),(r.includes("<script>")||r.includes("alert()"))&&(t.email="Please provide a valid email address"),(n.includes("<script>")||n.includes("alert()"))&&(t.password="Please provide a valid password"),(e.length<8||e.length>15)&&(t.username="Username must be between 8 to 15 characters long"),n.length<10&&(t.password="Password must be at least 10 characters long"),e||(t.username="Username field is required"),r||(t.email="Email field is required"),n||(t.password="Password field is required"),{isValid:!(Object.keys(t).length>0),errors:t}};var O=({email:e,password:r})=>{const n={};return e.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(n.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(n.email="Please provide a valid email address"),(r.includes("<script>")||r.includes("alert()"))&&(n.password="Please provide a valid password"),e||(n.email="Email field is required"),r||(n.password="Password field is required"),{isValid:!(Object.keys(n).length>0),errors:n}},q=n(0),P=n.n(q);const E=new P.a.Schema({username:{type:String,required:!0,trim:!0},email:{type:String,required:!0,trim:!0,unique:!0},password:{type:String,required:!0,trim:!0},isAdmin:{type:Boolean,default:!1},projects:[{type:P.a.Schema.Types.ObjectId,ref:"Project"}],posts:[{type:P.a.Schema.Types.ObjectId,ref:"Post"}],categories:[{type:P.a.Schema.Types.ObjectId,ref:"Category"}],date:{type:Date,default:Date.now}});var S=P.a.model("User",E),T=n(12),_=n.n(T);n(5).config();n(5).config();const z=o.a.Router();z.get("/user/:token",async(e,r)=>{try{const n=e.params.token.split("=");if("ccbd_user"===n[0]){const e=await v.a.verify(n[1],process.env.JWT_SECRET);return r.status(200).json({success:!0,user:e})}}catch(e){console.log(e)}}),z.post("/login",async(e,r)=>{try{const{email:n,password:t}=e.body,{isValid:s,errors:a}=O(e.body);if(!s)return r.status(400).json({success:!1,errors:a});const o=await S.findOne({email:n});if(!o)return a.email="A user of this email doesn't exist",r.status(400).json({success:!1,errors:a});if(!await j.a.compare(t,o.password))return a.password="Provided password doesn't match",r.status(400).json({success:!1,errors:a});const i={id:o._id,username:o.username,email:o.email,isAdmin:o.isAdmin},l=await v.a.sign(i,process.env.JWT_SECRET);return r.cookie("ccbd_user",l,{maxAge:2592e6}),r.status(200).json({success:!0,data:{message:"Welcome, you are now logged in"},user:i})}catch(e){r.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),z.post("/register",async(e,r)=>{try{const{username:n,email:t}=e.body,s=`${e.protocol}://${e.headers.host}`,{isValid:a,errors:o}=k(e.body);if(!a)return r.status(400).json({success:!1,errors:o});if(await S.findOne({email:t}))return o.email="A user of this email already exists",r.status(400).json({success:!1,errors:o});if((async(e,r,n,t)=>{try{const s=_.a.createTransport({host:"smtp.gmail.com",port:465,secure:!0,auth:{user:process.env.GOOGLE_USER,pass:process.env.GOOGLE_PASS},tls:{rejectUnauthorized:!1}}),a={from:process.env.GOOGLE_USER,to:r,subject:"Email confirmation to verify your account",html:((e,r,n)=>`\n  <!DOCTYPE html>\n  <html lang="en">\n  <head>\n      <meta charset="UTF-8">\n      <meta name="viewport" content="width=device-width, initial-scale=1.0">\n      <meta http-equiv="X-UA-Compatible" content="ie=edge">\n      <title>Email Template</title>\n      <style>\n          body {\n              padding: 0;\n              margin: 0;\n              font-family: "Roboto", sans-sarif;\n          }\n          a {\n              text-decoration: none;\n          }\n          table,td {\n              border-collapse: collapse;\n              padding: 0;\n          }\n          .container {\n              width: 100%;\n              height: 100%;\n              background-color: #eaeaea;\n          }\n          .wrapper {\n              display: block;\n              width: 500px;\n              height: auto;\n              background-color: #ffffff;\n              margin: 100px auto;\n              border: 2px solid #28b485;\n              border-radius: 3px;\n          }\n          .header {\n              width: 500px !important;\n              height: auto !important;\n              background-color: #28b485;\n              color: #ffffff;\n              padding: 30px;\n              text-align: center;\n          }\n          .header-title {\n              font-size: 25px;\n              letter-spacing: -1px;\n          }\n          .verify-text {\n              font-size: 20px;\n              color: #28b485;\n          }\n          .verify-name {\n              font-size: 16px;\n              color: #28b485;\n          }\n          .verify-desc {\n              font-size: 15px;\n              color: #868686;\n              font-weight: 400;\n          }\n          .verify-link {\n              display: inline-block;\n              padding: 10px 20px;\n              background-color: #28b485;\n              color: #ffffff;\n              border-radius: 3px;\n              margin: 20px 0 50px 0;\n              font-size: 15px;\n          }\n      </style>\n  </head>\n  <body style="padding: 0;margin: 0;font-family: &quot;Roboto&quot;, sans-sarif;">\n      <table class="container" style="border-collapse: collapse;padding: 0;width: 100%;height: 100%;background-color: #eaeaea;">\n          <tbody>\n              <tr>\n                  <td class="wrapper" align="center" style="border-collapse: collapse;padding: 0;display: block;width: 500px;height: auto;background-color: #ffffff;margin: 100px auto;border: 2px solid #28b485;border-radius: 3px;">\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td class="header" style="border-collapse: collapse;padding: 30px;background-color: #28b485;color: #ffffff;text-align: center;width: 500px !important;height: auto !important;"><h1 class="header-title" style="font-size: 25px;letter-spacing: -1px;">CODECAFEBD</h1></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-text" style="font-size: 20px;color: #28b485;">Verify Email</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-name" style="font-size: 16px;color: #28b485;">( Hi, ${n} )</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h4 class="verify-desc" style="font-size: 15px;color: #868686;font-weight: 400;">Thanks for creating an account with us.<br>To continue please verify your email with us.</h4></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><a href="${e}/api/auth/verify/${r}" target="_blank" class="verify-link" style="text-decoration: none;display: inline-block;padding: 10px 20px;background-color: #28b485;color: #ffffff;border-radius: 3px;margin: 20px 0 50px 0;font-size: 15px;">Verify Your Email</a></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h4 class="verify-desc" style="font-size: 15px;color: #868686;font-weight: 400;">Email validation time 1 hour.</h4></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n  </body>\n  </html>\n  `)(t,n,e)};return await s.sendMail(a)}catch(e){return e}})(n,t,await v.a.sign(e.body,process.env.JWT_SECRET,{expiresIn:"1h"}),s))return r.status(200).json({success:!0,data:{message:"Please verify your email address"}})}catch(e){r.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),z.get("/verify/:token",async(e,r)=>{try{const n=e.params.token,{username:t,email:s,password:a}=await v.a.verify(n,process.env.JWT_SECRET),o={username:t,email:s,password:await j.a.hash(a,10)};await S.create(o)&&r.redirect("/login")}catch(e){r.redirect("/register")}}),z.get("/logout",(e,r)=>{r.clearCookie("ccbd_user"),r.status(200).json({success:!0,data:{message:"You have been logged out"}})});var C=z;n(5).config(),P.a.connect(process.env.MONGODB_URI,{useNewUrlParser:!0},()=>{console.log(l.a.magenta("==> A database connection has been established"))}),P.a.set("useCreateIndex","true");const R=o()();R.use(b()()),R.use(p()()),R.use(d()("tiny")),R.use(m.a.json()),R.use(m.a.urlencoded({extended:!0})),R.get("/api",(e,r)=>{r.status(200).json({name:y.b,version:y.c,description:y.a})}),R.use("/api/auth",C),R.use(o.a.static("client/build")),R.get("*",(e,r)=>{r.sendFile(s.a.resolve("client","build","index.html"))}),R.listen(h,()=>{console.log(l.a.green(`==> The server is running on http://localhost:${h}`))})}]);