!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=12)}([function(e,n){e.exports=require("mongoose")},function(e,n){e.exports=require("express")},function(e,n){e.exports=require("colors")},function(e){e.exports={b:"server",c:"1.0.0",a:"Personal portfolio website"}},function(e,n){e.exports=require("dotenv")},function(e,n){e.exports=require("body-parser")},function(e,n){e.exports=require("jsonwebtoken")},function(e,n){e.exports=require("path")},function(e,n){e.exports=require("morgan")},function(e,n){e.exports=require("helmet")},function(e,n){e.exports=require("bcryptjs")},function(e,n){e.exports=require("nodemailer")},function(e,n,t){"use strict";t.r(n);var r=t(7),a=t.n(r),o=t(1),s=t.n(o),i=t(2),l=t.n(i),c=t(8),d=t.n(c),p=t(9),u=t.n(p),f=t(5),b=t.n(f),m=t(3);const y=process.env.PORT||5e3;var g=t(6),h=t.n(g),x=t(10),v=t.n(x);var w=({username:e,email:n,password:t})=>{const r={};return e.includes(t)&&(r.username="Username and password can't be the same"),n.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(r.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(r.username="Please provide a valid username"),(n.includes("<script>")||n.includes("alert()"))&&(r.email="Please provide a valid email address"),(t.includes("<script>")||t.includes("alert()"))&&(r.password="Please provide a valid password"),(e.length<8||e.length>15)&&(r.username="Username must be between 8 to 15 characters long"),t.length<10&&(r.password="Password must be at least 10 characters long"),e||(r.username="Username field is required"),n||(r.email="Email field is required"),t||(r.password="Password field is required"),{isValid:!(Object.keys(r).length>0),errors:r}},j=t(0),O=t.n(j);const q=new O.a.Schema({username:{type:String,required:!0,trim:!0},email:{type:String,required:!0,trim:!0,unique:!0},password:{type:String,required:!0,trim:!0},isAdmin:{type:Boolean,default:!1},projects:[{type:O.a.Schema.Types.ObjectId,ref:"Project"}],posts:[{type:O.a.Schema.Types.ObjectId,ref:"Post"}],categories:[{type:O.a.Schema.Types.ObjectId,ref:"Category"}],date:{type:Date,default:Date.now}});var k=O.a.model("User",q),P=t(11),S=t.n(P);t(4).config();t(4).config();const E=s.a.Router();E.get("/user",async(e,n)=>{try{n.status(200).json({success:!0})}catch(e){console.log(e)}}),E.post("/register",async(e,n)=>{try{const{username:t,email:r}=e.body,a=`${e.protocol}://${e.headers.host}`,{isValid:o,errors:s}=w(e.body);if(!o)return n.status(400).json({success:!1,errors:s});if(await k.findOne({email:r}))return s.email="A user of this email already exists",n.status(400).json({success:!1,errors:s});if((async(e,n,t,r)=>{try{const a=S.a.createTransport({host:"smtp.gmail.com",port:465,secure:!0,auth:{user:process.env.GOOGLE_USER,pass:process.env.GOOGLE_PASS},tls:{rejectUnauthorized:!1}}),o={from:process.env.GOOGLE_USER,to:n,subject:"Email confirmation to verify your account",html:((e,n,t)=>`\n  <!DOCTYPE html>\n  <html lang="en">\n  <head>\n      <meta charset="UTF-8">\n      <meta name="viewport" content="width=device-width, initial-scale=1.0">\n      <meta http-equiv="X-UA-Compatible" content="ie=edge">\n      <title>Email Template</title>\n      <style>\n          body {\n              padding: 0;\n              margin: 0;\n              font-family: "Roboto", sans-sarif;\n          }\n          a {\n              text-decoration: none;\n          }\n          table,td {\n              border-collapse: collapse;\n              padding: 0;\n          }\n          .container {\n              width: 100%;\n              height: 100%;\n              background-color: #eaeaea;\n          }\n          .wrapper {\n              display: block;\n              width: 500px;\n              height: auto;\n              background-color: #ffffff;\n              margin: 100px auto;\n              border: 2px solid #28b485;\n              border-radius: 3px;\n          }\n          .header {\n              width: 500px !important;\n              height: auto !important;\n              background-color: #28b485;\n              color: #ffffff;\n              padding: 30px;\n              text-align: center;\n          }\n          .header-title {\n              font-size: 25px;\n              letter-spacing: -1px;\n          }\n          .verify-text {\n              font-size: 20px;\n              color: #28b485;\n          }\n          .verify-name {\n              font-size: 16px;\n              color: #28b485;\n          }\n          .verify-desc {\n              font-size: 15px;\n              color: #868686;\n              font-weight: 400;\n          }\n          .verify-link {\n              display: inline-block;\n              padding: 10px 20px;\n              background-color: #28b485;\n              color: #ffffff;\n              border-radius: 3px;\n              margin: 20px 0 50px 0;\n              font-size: 15px;\n          }\n      </style>\n  </head>\n  <body style="padding: 0;margin: 0;font-family: &quot;Roboto&quot;, sans-sarif;">\n      <table class="container" style="border-collapse: collapse;padding: 0;width: 100%;height: 100%;background-color: #eaeaea;">\n          <tbody>\n              <tr>\n                  <td class="wrapper" align="center" style="border-collapse: collapse;padding: 0;display: block;width: 500px;height: auto;background-color: #ffffff;margin: 100px auto;border: 2px solid #28b485;border-radius: 3px;">\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td class="header" style="border-collapse: collapse;padding: 30px;background-color: #28b485;color: #ffffff;text-align: center;width: 500px !important;height: auto !important;"><h1 class="header-title" style="font-size: 25px;letter-spacing: -1px;">CODECAFEBD</h1></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-text" style="font-size: 20px;color: #28b485;">Verify Email</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-name" style="font-size: 16px;color: #28b485;">( Hi, ${t} )</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h4 class="verify-desc" style="font-size: 15px;color: #868686;font-weight: 400;">Thanks for creating an account with us.<br>To continue please verify your email with us.</h4></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><a href="${e}/api/auth/verify/${n}" target="_blank" class="verify-link" style="text-decoration: none;display: inline-block;padding: 10px 20px;background-color: #28b485;color: #ffffff;border-radius: 3px;margin: 20px 0 50px 0;font-size: 15px;">Verify Your Email</a></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n  </body>\n  </html>\n  `)(r,t,e)};return await a.sendMail(o)}catch(e){return e}})(t,r,await h.a.sign(e.body,process.env.JWT_SECRET,{expiresIn:"1h"}),a))return n.status(200).json({success:!0,data:{message:"Please verify your email address"}})}catch(e){n.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),E.get("/verify/:token",async(e,n)=>{try{const t=e.params.token,{username:r,email:a,password:o}=await h.a.verify(t,process.env.JWT_SECRET),s={username:r,email:a,password:await v.a.hash(o,10)};await k.create(s)&&n.redirect("/login")}catch(e){n.status(400).json({message:"Your account validation time has expired"})}});var T=E;t(4).config(),O.a.connect(process.env.MONGODB_URI,{useNewUrlParser:!0},()=>{console.log(l.a.magenta("==> A database connection has been established"))}),O.a.set("useCreateIndex","true");const _=s()();_.use(u()()),_.use(d()("tiny")),_.use(b.a.json()),_.use(b.a.urlencoded({extended:!0})),_.get("/api",(e,n)=>{n.status(200).json({name:m.b,version:m.c,description:m.a})}),_.use("/api/auth",T),_.use(s.a.static("client/build")),_.get("*",(e,n)=>{n.sendFile(a.a.resolve("client","build","index.html"))}),_.listen(y,()=>{console.log(l.a.green(`==> The server is running on http://localhost:${y}`))})}]);