!function(e){var s={};function r(t){if(s[t])return s[t].exports;var a=s[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=s,r.d=function(e,s,t){r.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,s){if(1&s&&(e=r(e)),8&s)return e;if(4&s&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&s&&"string"!=typeof e)for(var a in e)r.d(t,a,function(s){return e[s]}.bind(null,a));return t},r.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(s,"a",s),s},r.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},r.p="",r(r.s=15)}([function(e,s){e.exports=require("mongoose")},function(e,s){e.exports=require("express")},function(e,s){e.exports=require("jsonwebtoken")},function(e,s){e.exports=require("dotenv")},function(e,s){e.exports=require("colors")},function(e,s){e.exports=require("nodemailer")},function(e){e.exports={b:"server",c:"1.0.0",a:"Personal portfolio website"}},function(e,s){e.exports=require("path")},function(e,s){e.exports=require("body-parser")},function(e,s){e.exports=require("bcryptjs")},function(e,s){e.exports=require("express-fileupload")},function(e,s){e.exports=require("morgan")},function(e,s){e.exports=require("helmet")},function(e,s){e.exports=require("cookie-parser")},function(e,s){e.exports=require("fs")},function(e,s,r){"use strict";r.r(s);var t=r(7),a=r.n(t),n=r(1),o=r.n(n),i=r(10),c=r.n(i),l=r(4),d=r.n(l),u=r(11),p=r.n(u),m=r(12),g=r.n(m),f=r(8),y=r.n(f),b=r(13),h=r.n(b),v=r(6);const w=process.env.PORT||5e3;var x=r(2),j=r.n(x),S=r(9),q=r.n(S);var O=({username:e,email:s,password:r})=>{const t={};return e.includes(r)&&(t.username="Username and password can't be the same"),s.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(t.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(t.username="Please provide a valid username"),(s.includes("<script>")||s.includes("alert()"))&&(t.email="Please provide a valid email address"),(r.includes("<script>")||r.includes("alert()"))&&(t.password="Please provide a valid password"),(e.length<8||e.length>15)&&(t.username="Username must be between 8 to 15 characters long"),r.length<10&&(t.password="Password must be at least 10 characters long"),e||(t.username="Username field is required"),s||(t.email="Email field is required"),r||(t.password="Password field is required"),{isValid:!(Object.keys(t).length>0),errors:t}};var P=({email:e,password:s})=>{const r={};return e.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(r.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(r.email="Please provide a valid email address"),(s.includes("<script>")||s.includes("alert()"))&&(r.password="Please provide a valid password"),e||(r.email="Email field is required"),s||(r.password="Password field is required"),{isValid:!(Object.keys(r).length>0),errors:r}},k=r(0),E=r.n(k);const T=new E.a.Schema({username:{type:String,required:!0,trim:!0},email:{type:String,required:!0,trim:!0,unique:!0},password:{type:String,required:!0,trim:!0},isAdmin:{type:Boolean,default:!1},projects:[{type:E.a.Schema.Types.ObjectId,ref:"Project"}],posts:[{type:E.a.Schema.Types.ObjectId,ref:"Post"}],categories:[{type:E.a.Schema.Types.ObjectId,ref:"Category"}],date:{type:Date,default:Date.now}});var _=E.a.model("User",T),A=r(5),R=r.n(A);r(3).config();r(3).config();const U=o.a.Router();U.get("/user/:token",async(e,s)=>{try{const r=e.params.token.split("=");if("ccbd_user"===r[0]){const e=await j.a.verify(r[1],process.env.JWT_SECRET);return s.status(200).json({success:!0,user:e})}}catch(e){console.log(e)}}),U.post("/login",async(e,s)=>{try{const{email:r,password:t}=e.body,{isValid:a,errors:n}=P(e.body);if(!a)return s.status(400).json({success:!1,errors:n});const o=await _.findOne({email:r});if(!o)return n.email="A user of this email doesn't exist",s.status(400).json({success:!1,errors:n});if(!await q.a.compare(t,o.password))return n.password="Provided password doesn't match",s.status(400).json({success:!1,errors:n});const i={id:o._id,username:o.username,email:o.email,isAdmin:o.isAdmin},c=await j.a.sign(i,process.env.JWT_SECRET);return s.cookie("ccbd_user",c,{maxAge:2592e6}),s.status(200).json({success:!0,data:{message:"Welcome, you are now logged in"},user:i})}catch(e){s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),U.post("/register",async(e,s)=>{try{const{username:r,email:t}=e.body,a=`${e.protocol}://${e.headers.host}`,{isValid:n,errors:o}=O(e.body);if(!n)return s.status(400).json({success:!1,errors:o});if(await _.findOne({email:t}))return o.email="A user of this email already exists",s.status(400).json({success:!1,errors:o});if((async(e,s,r,t)=>{try{const a=R.a.createTransport({host:"smtp.gmail.com",port:465,secure:!0,auth:{user:process.env.GOOGLE_USER,pass:process.env.GOOGLE_PASS},tls:{rejectUnauthorized:!1}}),n={from:process.env.GOOGLE_USER,to:s,subject:"Email confirmation to verify your account",html:((e,s,r)=>`\n  <!DOCTYPE html>\n  <html lang="en">\n  <head>\n      <meta charset="UTF-8">\n      <meta name="viewport" content="width=device-width, initial-scale=1.0">\n      <meta http-equiv="X-UA-Compatible" content="ie=edge">\n      <title>Email Template</title>\n      <style>\n          body {\n              padding: 0;\n              margin: 0;\n              font-family: "Roboto", sans-sarif;\n          }\n          a {\n              text-decoration: none;\n          }\n          table,td {\n              border-collapse: collapse;\n              padding: 0;\n          }\n          .container {\n              width: 100%;\n              height: 100%;\n              background-color: #eaeaea;\n          }\n          .wrapper {\n              display: block;\n              width: 500px;\n              height: auto;\n              background-color: #ffffff;\n              margin: 100px auto;\n              border: 2px solid #28b485;\n              border-radius: 3px;\n          }\n          .header {\n              width: 500px !important;\n              height: auto !important;\n              background-color: #28b485;\n              color: #ffffff;\n              padding: 30px;\n              text-align: center;\n          }\n          .header-title {\n              font-size: 25px;\n              letter-spacing: -1px;\n          }\n          .verify-text {\n              font-size: 20px;\n              color: #28b485;\n          }\n          .verify-name {\n              font-size: 16px;\n              color: #28b485;\n          }\n          .verify-desc {\n              font-size: 15px;\n              color: #868686;\n              font-weight: 400;\n          }\n          .verify-link {\n              display: inline-block;\n              padding: 10px 20px;\n              background-color: #28b485;\n              color: #ffffff;\n              border-radius: 3px;\n              margin: 20px 0 50px 0;\n              font-size: 15px;\n          }\n      </style>\n  </head>\n  <body style="padding: 0;margin: 0;font-family: &quot;Roboto&quot;, sans-sarif;">\n      <table class="container" style="border-collapse: collapse;padding: 0;width: 100%;height: 100%;background-color: #eaeaea;">\n          <tbody>\n              <tr>\n                  <td class="wrapper" align="center" style="border-collapse: collapse;padding: 0;display: block;width: 500px;height: auto;background-color: #ffffff;margin: 100px auto;border: 2px solid #28b485;border-radius: 3px;">\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td class="header" style="border-collapse: collapse;padding: 30px;background-color: #28b485;color: #ffffff;text-align: center;width: 500px !important;height: auto !important;"><h1 class="header-title" style="font-size: 25px;letter-spacing: -1px;">CODECAFEBD</h1></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                      <table style="border-collapse: collapse;padding: 0;">\n                          <tbody>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-text" style="font-size: 20px;color: #28b485;">Verify Email</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h1 class="verify-name" style="font-size: 16px;color: #28b485;">( Hi, ${r} )</h1></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h4 class="verify-desc" style="font-size: 15px;color: #868686;font-weight: 400;">Thanks for creating an account with us.<br>To continue please verify your email with us.</h4></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><a href="${e}/api/auth/verify/${s}" target="_blank" class="verify-link" style="text-decoration: none;display: inline-block;padding: 10px 20px;background-color: #28b485;color: #ffffff;border-radius: 3px;margin: 20px 0 50px 0;font-size: 15px;">Verify Your Email</a></td>\n                              </tr>\n                              <tr>\n                                  <td align="center" style="border-collapse: collapse;padding: 0;"><h4 class="verify-desc" style="font-size: 15px;color: #868686;font-weight: 400;">Email validation time 1 hour.</h4></td>\n                              </tr>\n                          </tbody>\n                      </table>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n  </body>\n  </html>\n  `)(t,r,e)};return await a.sendMail(n)}catch(e){return e}})(r,t,await j.a.sign(e.body,process.env.JWT_SECRET,{expiresIn:"1h"}),a))return s.status(200).json({success:!0,data:{message:"Please verify your email address"}})}catch(e){s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),U.get("/verify/:token",async(e,s)=>{try{const r=e.params.token,{username:t,email:a,password:n}=await j.a.verify(r,process.env.JWT_SECRET),o={username:t,email:a,password:await q.a.hash(n,10)};await _.create(o)&&s.redirect("/login")}catch(e){s.redirect("/register")}}),U.get("/logout",(e,s)=>{s.clearCookie("ccbd_user"),s.status(200).json({success:!0,data:{message:"You have been logged out"}})});var G=U;r(14);const $=new E.a.Schema({user:{type:E.a.Schema.Types.ObjectId,ref:"User"},name:{type:String,required:!0,trim:!0,unique:!0},category:{type:String,required:!0,trim:!0},website:{type:String,required:!0,trim:!0},github:{type:String,required:!0,trim:!0},image:{type:String,required:!0,trim:!0},date:{type:Date,default:Date.now}});var z=E.a.model("Project",$);var C=({name:e,category:s,website:r,github:t})=>{const a={};return(e.includes("<script>")||e.includes("alert()"))&&(a.name="Please provide a valid name"),(s.includes("<script>")||s.includes("alert()"))&&(a.category="Please provide a valid category"),(r.includes("<script>")||r.includes("alert()"))&&(a.website="Please provide a valid website link"),(t.includes("<script>")||t.includes("alert()"))&&(a.github="Please provide a valid github link"),e||(a.name="Name field is required"),s||(a.category="Category field is required"),r||(a.website="Website link is required"),t||(a.github="Github link is required"),{isValid:!(Object.keys(a).length>0),errors:a}};r(3).config();const I=o.a.Router();I.get("/",async(e,s)=>{try{const e=await z.find({}).sort({date:-1});if(e)return s.status(200).json({success:!0,projects:e})}catch(e){s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),I.post("/add",async(e,s)=>{try{const{isValid:r,errors:t}=C(e.body);if(!r)return s.status(400).json({success:!1,errors:t});const a=await j.a.decode(e.body.user,process.env.JWT_SECRET),n=await _.findById(a.id);if(!n.isAdmin)return t.error="You don't have permission to add a project",s.status(400).json({success:!1,errors:t});if(await z.findOne({name:e.body.name}))return t.error="A project of this name already exists",s.status(400).json({success:!1,errors:t});const o={user:n._id,name:e.body.name,category:e.body.category,website:e.body.website,github:e.body.github,image:e.body.image},i=await z.create(o);if(i)return n.projects.push(i),n.save(),s.status(200).json({success:!0,data:{message:"A new project has been created"},project:i})}catch(e){s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),I.get("/delete/:id",async(e,s)=>{try{const r=await z.findByIdAndDelete(e.params.id);return s.status(200).json({success:!0,data:{message:"One project has been deleted"},project:r})}catch(e){s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}}),I.post("/update/:id",async(e,s)=>{try{const{isValid:r,errors:t}=C(e.body);if(!r)return s.status(400).json({success:!1,errors:t});await z.findById(e.params.id);const a={name:e.body.name,category:e.body.category,website:e.body.website,github:e.body.github,image:e.body.image},n=await z.findByIdAndUpdate(e.params.id,a,{new:!0});if(n)return s.status(200).json({success:!0,data:{message:"One project has been updated"},project:n})}catch(e){console.log(e),s.status(500).json({success:!1,errors:{error:"Something went wrong, please try again later"}})}});var V=I;var M=({name:e,email:s,subject:r,message:t})=>{const a={};return s.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)||(a.email="Please provide a valid email address"),(e.includes("<script>")||e.includes("alert()"))&&(a.name="Please provide a valid name"),(s.includes("<script>")||s.includes("alert()"))&&(a.email="Please provide a valid email address"),(r.includes("<script>")||r.includes("alert()"))&&(a.subject="Please provide a valid subject"),(t.includes("<script>")||t.includes("alert()"))&&(a.message="Please provide a valid message"),e||(a.name="Name field is required"),s||(a.email="Email field is required"),r||(a.subject="Subject field is required"),t||(a.message="Message field is required"),{isValid:!(Object.keys(a).length>0),errors:a}};r(3).config();const D=o.a.Router();D.post("/contact",async(e,s)=>{try{const{name:r,email:t,subject:a,message:n}=e.body,{isValid:o,errors:i}=M(e.body);if(!o)return s.status(400).json({success:!1,errors:i});const c=R.a.createTransport({pool:!0,host:"smtp.gmail.com",port:465,secure:!0,auth:{user:process.env.GOOGLE_USER,pass:process.env.GOOGLE_PASS},tls:{rejectUnauthorized:!1}}),l={from:r+`<${t}>`,to:process.env.GOOGLE_USER,subject:"Message from codecafebd...",html:`\n        <h4>Name: ${r}</h4>\n        <h4>Email: ${t}</h4>\n        <h4>Subject: ${a}</h4>\n        <br>\n        <br>\n        <hr>\n        <br>\n        <h4>Message: </h4>\n        <p>${n}</p>\n      `};if(await c.sendMail(l))return s.status(200).json({success:!0,data:{message:"Your message has been sent"}})}catch(e){s.status(500).json({success:!1,messages:{message:"Something went wrong, please try again later"}})}});var B=D;r(3).config(),E.a.connect(process.env.MONGODB_URI,{useNewUrlParser:!0},()=>{console.log(d.a.magenta("==> A database connection has been established"))}),E.a.set("useCreateIndex","true");const W=o()();W.use(c()()),W.use(h()()),W.use(g()()),W.use(p()("tiny")),W.use(y.a.json()),W.use(y.a.urlencoded({extended:!0})),W.get("/api",(e,s)=>{s.status(200).json({name:v.b,version:v.c,description:v.a})}),W.use("/api/auth",G),W.use("/api/projects",V),W.use("/api",B),W.use(o.a.static("client/build")),W.get("*",(e,s)=>{s.sendFile(a.a.resolve("client","build","index.html"))}),W.listen(w,()=>{console.log(d.a.green(`==> The server is running on http://localhost:${w}`))})}]);